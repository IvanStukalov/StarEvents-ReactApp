{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "App for serving star events",
        "title": "Star Events App",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/check-auth": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Проверяет аутентификацию текущего пользователя и возвращает его информацию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Проверка аутентификации",
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/event/": {
            "get": {
                "description": "Возвращает список событий, отфильтрованных по заданным параметрам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Получить список событий",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус события",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Верхняя граница формирования события",
                        "name": "start_formation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Нижняя граница формирования события",
                        "name": "end_formation",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список событий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный формат даты",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "События не найдены",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет существующее событие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Удалить событие",
                "responses": {
                    "200": {
                        "description": "Событие успешно удалено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка удаления события",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/event/finish-scanning": {
            "put": {
                "description": "Принимает JSON запрос, проверяет токен и сохраняет процент сканирования. Возвращает сообщение об успешности или ошибке.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Завершает процесс сканирования",
                "parameters": [
                    {
                        "description": "Событие для завершения сканирования",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщение об успешности",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка при привязке JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Неверный токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/event/form": {
            "put": {
                "description": "Создает новое событие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Создать событие",
                "responses": {
                    "200": {
                        "description": "Событие успешно создано",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка создания события",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/event/{id}": {
            "get": {
                "description": "Возвращает информацию о событии по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Получить событие по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID события",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о событии",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный ID события",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Событие не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующее событие по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Обновить событие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID события",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Новое название события",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Событие успешно обновлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID события или название",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/event/{id}/status": {
            "put": {
                "description": "Изменяет статус существующего события",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "События"
                ],
                "summary": "Изменить статус события",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Новый статус события",
                        "name": "status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID события",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус успешно изменен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный статус или ID события",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отменяет аутентификацию пользователя и удаляет JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "Пользователь успешно вышел из системы",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/signIn": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Авторизует пользователя и возвращает JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/signUp": {
            "post": {
                "description": "Регистрирует нового пользователя с заданными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Новый пользователь",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignUp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных о новом пользователе",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Нельзя создать пользователя с таким логином",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/star-event/{star-id}": {
            "delete": {
                "description": "\"Удаляет звезду из события по ее ID\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Событие-Звезды"
                ],
                "summary": "\"Удалить звезду из события\"",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID звезды",
                        "name": "star-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Событие после удаления звезды",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный ID звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/star/": {
            "get": {
                "description": "Возвращает список звезд, отфильтрованных по заданным параметрам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Получить список звезд",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Верхняя граница расстояния",
                        "name": "dist_top",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Нижняя граница расстояния",
                        "name": "dist_bot",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Верхняя граница возраста",
                        "name": "age_top",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Нижняя граница возраста",
                        "name": "age_bot",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Верхняя граница звездной величины",
                        "name": "mag_top",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Нижняя граница звездной величины",
                        "name": "mag_bot",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Ошибка при получении списка звезд или черновика",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новую звезду с заданными параметрами",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Создать звезду",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название звезды",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание звезды",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Расстояние до звезды",
                        "name": "distance",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Возраст звезды",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Звездная величина",
                        "name": "magnitude",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Изображение звезды",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное создание звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный ввод данных",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/star/event": {
            "post": {
                "description": "Добавляет звезду в событие по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Добавить звезду в событие",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID звезды",
                        "name": "star_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает ID черновика",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID события или сообщение",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/star/{id}": {
            "get": {
                "description": "Возвращает информацию о звезде по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Получить звезду по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID звезды",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "$ref": "#/definitions/models.Star"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Звезда не найдена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет существующую звезду по ее ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Удалить звезду",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID звезды",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/star/{id}/update": {
            "put": {
                "description": "Обновляет существующую звезду с заданными параметрами",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Звезды"
                ],
                "summary": "Обновить звезду",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID звезды",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Новое название звезды",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Новое описание звезды",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Новое расстояние до звезды",
                        "name": "distance",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Новый возраст звезды",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "Новая звездная величина",
                        "name": "magnitude",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Новое изображение звезды",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление звезды",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный ввод данных",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Event": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "integer"
                },
                "formation_date": {
                    "type": "string"
                },
                "moderator": {
                    "type": "string"
                },
                "moderator_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scanned_percent": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Star": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "image": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "magnitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "star_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "isAdmin": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        },
        "models.UserSignUp": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 64
                },
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                }
            }
        }
    }
}